# Copyright 2018 New Vector Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
swagger: '2.0'
info:
  title: "Matrix Client-Server Third Party Lookup API"
  version: "1.0.0"
host: localhost:8008
schemes:
  - https
  - http
basePath: /_matrix/client/v3
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  $ref: definitions/security.yaml
paths:
  "/thirdparty/protocols":
    get:
      summary: Retrieve metadata about all protocols that a homeserver supports.
      description: |-
        Fetches the overall metadata about protocols supported by the
        homeserver. Includes both the available protocols and all fields
        required for queries against each protocol.
      operationId: getProtocols
      security:
        - accessToken: []
      responses:
        200:
          description: The protocols supported by the homeserver.
          schema:
            $ref: ../application-service/definitions/protocol_metadata.yaml
      tags:
        - Third Party Lookup
  "/thirdparty/protocol/{protocol}":
    get:
      summary: Retrieve metadata about a specific protocol that the homeserver supports.
      description: |-
        Fetches the metadata from the homeserver about a particular third party protocol.
      operationId: getProtocolMetadata
      security:
        - accessToken: []
      parameters:
        - in: path
          name: protocol
          type: string
          description: |-
            The name of the protocol.
          required: true
          x-example: "irc"
      responses:
        200:
          description: The protocol was found and metadata returned.
          schema:
            $ref: ../application-service/definitions/protocol.yaml
        404:
          description: The protocol is unknown.
          examples:
            application/json: {
              "errcode": "M_NOT_FOUND"
            }
          schema:
            $ref: definitions/errors/error.yaml
      tags:
        - Third Party Lookup
  "/thirdparty/location/{protocol}":
    get:
      summary: Retrieve Matrix-side portals rooms leading to a third party location.
      description: |-
        Requesting this endpoint with a valid protocol name results in a list
        of successful mapping results in a JSON array. Each result contains
        objects to represent the Matrix room or rooms that represent a portal
        to this third party network. Each has the Matrix room alias string,
        an identifier for the particular third party network protocol, and an
        object containing the network-specific fields that comprise this
        identifier. It should attempt to canonicalise the identifier as much
        as reasonably possible given the network type.
      operationId: queryLocationByProtocol
      security:
        - accessToken: []
      parameters:
        - in: path
          name: protocol
          type: string
          description: The protocol used to communicate to the third party network.
          required: true
          x-example: irc
        - in: query
          name: searchFields
          type: string
          description: |-
            One or more custom fields to help identify the third party
            location.
      responses:
        200:
          description: At least one portal room was found.
          schema:
            $ref: ../application-service/definitions/location_batch.yaml
        404:
          description: No portal rooms were found.
          examples:
            application/json: {
              "errcode": "M_NOT_FOUND"
            }
          schema:
            $ref: definitions/errors/error.yaml
      tags:
        - Third Party Lookup
  "/thirdparty/user/{protocol}":
    get:
      summary: Retrieve the Matrix User ID of a corresponding third party user.
      description: |-
        Retrieve a Matrix User ID linked to a user on the third party service, given
        a set of user parameters.
      operationId: queryUserByProtocol
      security:
        - accessToken: []
      parameters:
        - in: path
          name: protocol
          type: string
          description: |-
            The name of the protocol.
          required: true
          x-example: irc
        - in: query
          name: fields...
          type: string
          description: |-
            One or more custom fields that are passed to the AS to help identify the user.
      responses:
        200:
          description: The Matrix User IDs found with the given parameters.
          schema:
            $ref: ../application-service/definitions/user_batch.yaml
        404:
          description: The Matrix User ID was not found
          examples:
            application/json: {
              "errcode": "M_NOT_FOUND"
            }
          schema:
            $ref: definitions/errors/error.yaml
      tags:
        - Third Party Lookup
  "/thirdparty/location":
    get:
      summary: Reverse-lookup third party locations given a Matrix room alias.
      description: |-
        Retrieve an array of third party network locations from a Matrix room
        alias.
      operationId: queryLocationByAlias
      security:
        - accessToken: []
      parameters:
        - in: query
          name: alias
          type: string
          description: The Matrix room alias to look up.
          required: true
          x-example: "#matrix:matrix.org"
      responses:
        200:
          description: |-
            All found third party locations.
          schema:
            $ref: ../application-service/definitions/location_batch.yaml
        404:
          description: The Matrix room alias was not found
          examples:
            application/json: {
              "errcode": "M_NOT_FOUND"
            }
          schema:
            $ref: definitions/errors/error.yaml
      tags:
        - Third Party Lookup
  "/thirdparty/user":
    get:
      summary: Reverse-lookup third party users given a Matrix User ID.
      description: |-
        Retrieve an array of third party users from a Matrix User ID.
      operationId: queryUserByID
      security:
        - accessToken: []
      parameters:
        - in: query
          name: userid
          type: string
          description: The Matrix User ID to look up.
          required: true
          x-example: "@bob:matrix.org"
      responses:
        200:
          description: |-
            An array of third party users.
          schema:
            $ref: ../application-service/definitions/user_batch.yaml
        404:
          description: The Matrix User ID was not found
          examples:
            application/json: {
              "errcode": "M_NOT_FOUND"
            }
          schema:
            $ref: definitions/errors/error.yaml
      tags:
        - Third Party Lookup
